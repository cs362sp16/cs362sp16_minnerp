I found development of these random testers more difficult than I originally thought. Getting full code coverage was difficult as well. For adventurer, I had trouble getting a specific line of code to be covered because it only ran in very rare circumstances. In fact, I couldn't show code coverage for the adventurer card because my tester would cause the program to crash and not collect test data after a certain amount of runs. This means I did find a bug, but I have yet to debug it. My randomtestcard1 does achieve 100% coverage for it's function, though. That card is the council room. This card was relatively easy because there are few branch cases, so most of the function is covered very quickly I was able to get full coverage for this test very quickly (just a second or so). My randomtestcard2, which covers remodel, almost gets 100% coverage, but it fails to cover a rare branch with two lines in it. If I had let my random tester run longer, I might have achieved full coverage for this card as well. As far as overall coverage, the random testers covered more in general than the unit tests. This is probably because random testers will sometimes take different paths which run more functions. Since I acually found a bug with these testers, I would say they seem better at detecting faults than the unit test functions.
