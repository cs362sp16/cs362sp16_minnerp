The cards all cover around the same amount, because they do not require much else other than manipulating the game state. Other functions are called, but not often. In addition, some of the "coverage" of the card tests are actually calling functions to set up the game struct, so it looks like it did a lot. I used functions in the later tests that I had tested previous to show that they are correct.
Some of the normal unit tests are not huge, so they only cover a small amount.
As for strategies, I would try to make sure that all the functions manipulated the game state in the correct way. At every point in the function I would write a corresponding assert that would test the value of that statement. Of course these assertations match up with the rules of the game.
One odd thing I found was in the baron card. When not choosing to discard a card, the player gets an estate card, but it goes straight to the discard. I guess this makes hand manipulation a little simpler, but I just thought it was odd. It would be hard to show the player that they had received the card without displaying the discard pile to them.
Other issues I had were more misunderstandings of the game in and of itself. I thought that there woud be 6 estates if the player received one on their first turn, but I was being silly and the number of estates would then be 3 (That is the total number of estates that the player has).
Assignment 2 finished.
